[{"C:\\Side projects\\pxplots\\src\\index.js":"1","C:\\Side projects\\pxplots\\src\\App.js":"2","C:\\Side projects\\pxplots\\src\\components\\Wrapper\\index.tsx":"3","C:\\Side projects\\pxplots\\src\\components\\Modal\\index.tsx":"4","C:\\Side projects\\pxplots\\src\\components\\Grid\\GridContainer\\index.tsx":"5","C:\\Side projects\\pxplots\\src\\components\\Grid\\GridBox\\index.tsx":"6","C:\\Side projects\\pxplots\\src\\components\\Menu\\index.tsx":"7","C:\\Side projects\\pxplots\\src\\helpers\\storage.ts":"8","C:\\Side projects\\pxplots\\src\\components\\Navigation\\index.tsx":"9","C:\\Side projects\\pxplots\\src\\Redux\\store\\index.ts":"10","C:\\Side projects\\pxplots\\src\\Redux\\slices\\themeSlice\\index.ts":"11","C:\\Side projects\\pxplots\\src\\enums\\themes.tsx":"12","C:\\Side projects\\pxplots\\src\\components\\Navigation\\Roadmap\\index.tsx":"13","C:\\Side projects\\pxplots\\src\\components\\Navigation\\About\\index.tsx":"14","C:\\Side projects\\pxplots\\src\\components\\Navigation\\Team\\index.tsx":"15","C:\\Side projects\\pxplots\\src\\components\\Navigation\\FAQ\\index.tsx":"16","C:\\Side projects\\pxplots\\src\\components\\SocialLinks\\index.tsx":"17","C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\index.tsx":"18","C:\\Side projects\\pxplots\\src\\components\\Grid\\GridBoxes\\index.tsx":"19","C:\\Side projects\\pxplots\\src\\components\\ThemeToggle\\index.tsx":"20","C:\\Side projects\\pxplots\\src\\Redux\\slices\\mintSlice\\index.tsx":"21","C:\\Side projects\\pxplots\\src\\components\\MintModal\\index.tsx":"22","C:\\Side projects\\pxplots\\src\\components\\pxplotCube\\index.tsx":"23","C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\ExamplePageB\\index.tsx":"24","C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\ExamplePageA\\index.tsx":"25","C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\ExampleMarketPageC\\index.tsx":"26","C:\\Side projects\\pxplots\\src\\enums\\index.tsx":"27","C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\ExampleMarketPageD\\index.tsx":"28"},{"size":192,"mtime":1643048919064,"results":"29","hashOfConfig":"30"},{"size":325,"mtime":1644352404653,"results":"31","hashOfConfig":"30"},{"size":1204,"mtime":1644352404815,"results":"32","hashOfConfig":"30"},{"size":16574,"mtime":1644352404752,"results":"33","hashOfConfig":"30"},{"size":970,"mtime":1644688579875,"results":"34","hashOfConfig":"30"},{"size":631,"mtime":1644352404703,"results":"35","hashOfConfig":"30"},{"size":2495,"mtime":1644352404734,"results":"36","hashOfConfig":"30"},{"size":318,"mtime":1644352404835,"results":"37","hashOfConfig":"30"},{"size":9459,"mtime":1645292986137,"results":"38","hashOfConfig":"30"},{"size":260,"mtime":1644354077994,"results":"39","hashOfConfig":"30"},{"size":510,"mtime":1644355282825,"results":"40","hashOfConfig":"30"},{"size":61,"mtime":1644352404831,"results":"41","hashOfConfig":"30"},{"size":3630,"mtime":1644352404780,"results":"42","hashOfConfig":"30"},{"size":5548,"mtime":1646036930862,"results":"43","hashOfConfig":"30"},{"size":2677,"mtime":1645892398962,"results":"44","hashOfConfig":"30"},{"size":2441,"mtime":1644352404768,"results":"45","hashOfConfig":"30"},{"size":1561,"mtime":1644352404801,"results":"46","hashOfConfig":"30"},{"size":3655,"mtime":1646036028926,"results":"47","hashOfConfig":"30"},{"size":887,"mtime":1644687532128,"results":"48","hashOfConfig":"30"},{"size":3421,"mtime":1644353424546,"results":"49","hashOfConfig":"30"},{"size":478,"mtime":1644355137612,"results":"50","hashOfConfig":"30"},{"size":1364,"mtime":1644352404743,"results":"51","hashOfConfig":"30"},{"size":1555,"mtime":1646035637184,"results":"52","hashOfConfig":"30"},{"size":7869,"mtime":1645983891996,"results":"53","hashOfConfig":"30"},{"size":10906,"mtime":1646036372568,"results":"54","hashOfConfig":"30"},{"size":8318,"mtime":1645993110077,"results":"55","hashOfConfig":"30"},{"size":163,"mtime":1645899787014,"results":"56","hashOfConfig":"30"},{"size":1688,"mtime":1645991940416,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"danulq",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},"C:\\Side projects\\pxplots\\src\\index.js",[],["125","126"],"C:\\Side projects\\pxplots\\src\\App.js",[],"C:\\Side projects\\pxplots\\src\\components\\Wrapper\\index.tsx",["127","128"],"import * as React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport GridContainer from '../Grid/GridContainer/';\nimport Navigation from '../Navigation/';\n// import Menu from '../Menu/';\nimport Modal from '../Modal/';\nimport { getItemFromLocalStorage } from '../../helpers/storage';\nimport { useDispatch } from 'react-redux';\nimport { setTheme } from '../../Redux/slices/themeSlice';\n\nconst useStyles = createUseStyles({\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tflexFlow: 'column'\n\t}\n});\n\nconst Wrapper = () => {\n\tconst [modalOpen, setModalOpen] = React.useState<boolean>(false);\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\tReact.useEffect(() => {\n\t\tconst storedTheme = getItemFromLocalStorage('theme');\n\n\t\tif (storedTheme) {\n\t\t\tdispatch(setTheme(storedTheme))\n\t\t}\n\t}, [])\n\n\tconst openModal = () => setModalOpen(true);\n\n\tconst closeModal = () => setModalOpen(false);\n\n\treturn (\n\t\t<div className={classes.container}>\n\t\t\t<Modal open={modalOpen} closeModal={closeModal} />\n\t\t\t<div style={{ height: '100vh', width: '100vw', display: 'flex' }}>\n\t\t\t\t<Navigation />\n\t\t\t\t<GridContainer />\n\t\t\t</div>\n\t\t\t{/* <Menu openModal={openModal} /> */}\n\t\t</div>\n\t);\n};\n\nexport default Wrapper;\n",["129","130"],"C:\\Side projects\\pxplots\\src\\components\\Modal\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\Grid\\GridContainer\\index.tsx",["131"],"import * as React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useSelector } from 'react-redux';\nimport { IModalState } from '../../../Redux/slices/mintSlice';\nimport ExampleMarketPages from '../../ExampleMarketPages/';\nimport MintModal from '../../MintModal';\nimport GridBoxes from '../GridBoxes/';\n\nconst useStyles = createUseStyles({\n\tcontainer: {\n\t\toverflow: 'hidden',\n\t\theight: '100vh',\n\t\twidth: '100%',\n\t\tlineHeight: 0,\n\t\tposition: 'relative'\n\t}\n});\n\nconst GridContainer = () => {\n\tconst classes = useStyles();\n\tconst divEl = React.useRef<HTMLDivElement>(null);\n\tconst { modalOpen } = useSelector((state: any): any => state.modal)\n\t// const { theme = {} } = useSelector((state: IThemeState): IThemeState => state.theme)\n\n\tconsole.log('modal >', modalOpen)\n\t// \n\treturn (\n\t\t<div className={classes.container} ref={divEl}>\n\t\t\t{modalOpen ? <MintModal /> : <ExampleMarketPages />}\n\t\t\t<GridBoxes />\n\t\t</div>\n\t);\n};\n\nexport default GridContainer;\n","C:\\Side projects\\pxplots\\src\\components\\Grid\\GridBox\\index.tsx",["132","133"],"import * as React from 'react';\nimport { createUseStyles } from 'react-jss';\n\ninterface IProps {\n\tbgColour: string;\n}\n\nconst useStyles = createUseStyles({\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tflexFlow: 'row wrap'\n\t},\n\troot: {\n\t\t//\n\t},\n\tdeadPixels: {\n\t\tbackgroundColor: 'black',\n\t\tflex: 1\n\t}\n});\n\ninterface IProps {\n\tbgColour: string;\n}\n\nconst GridBox = ({ bgColour }: IProps) => {\n\tconst classes = useStyles();\n\tconst [active, setActive] = React.useState<boolean>(false);\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: active ? 'white' : bgColour,\n\t\t\t\theight: '20px',\n\t\t\t\twidth: '20px'\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport default GridBox;\n","C:\\Side projects\\pxplots\\src\\components\\Menu\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\helpers\\storage.ts",[],"C:\\Side projects\\pxplots\\src\\components\\Navigation\\index.tsx",["134"],"import * as React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport About from './About/';\nimport Roadmap from './Roadmap/';\nimport Team from './Team/';\nimport FAQ from './FAQ/';\nimport SocialLinks from '../SocialLinks/';\nimport { IThemeState, setTheme } from '../../Redux/slices/themeSlice';\nimport { useSelector, useDispatch } from 'react-redux'\nimport ThemeToggle from '../ThemeToggle';\nimport { Theme } from '../../enums/themes';\nimport { setModalOpen } from '../../Redux/slices/mintSlice';\n\nconst useStyles = createUseStyles({\n    root: {\n        backgroundColor: 'white',\n        borderRight: 'solid 5px #5141f1',\n        borderTopRightRadius: '8px',\n        borderBottomRightRadius: '8px',\n        boxShadow: 'rgb(0 0 0) 8px 12px 34px 0px',\n        boxSizing: 'border-box',\n        fontFamily: 'Roboto Slab, serif',\n        height: '100%',\n        padding: '16px',\n        transition: 'background-color .4s linear',\n        width: '550px',\n        zIndex: 1\n    },\n    root_night_mode: {\n        backgroundColor: 'black',\n        color: 'white',\n        transition: 'background-color .4s linear'\n    },\n    button_container: {\n        alignItems: 'center',\n        display: 'flex',\n        flexFlow: 'row',\n        height: 'fit-content',\n        marginBottom: '30px',\n        justifyContent: 'space-between'\n    },\n    button: {\n        backgroundColor: '#5141f1',\n        border: 'solid 4px black',\n        borderRadius: '5px',\n        color: 'white',\n        cursor: 'pointer',\n        fontFamily: 'Roboto Slab, serif',\n        fontSize: '18px',\n        minHeight: '48px',\n        outline: 'solid 4px white',\n        transition: 'border .4s linear, outline .4s linear, background-color .2s linear',\n        width: '180px',\n        '&:hover': {\n            backgroundColor: '#3effdb',\n            color: 'black',\n            transition: 'background-color .2s linear',\n        },\n        '&:active': {\n            backgroundColor: '#fffd00',\n            boxShadow: 'inset 0 0 16px #000000',\n            transition: 'background-color .2s linear, box-shadow .05s linear',\n        }\n    },\n    mint_button: {\n        border: 'solid 4px black',\n        backgroundColor: '#3effdb',\n        color: 'black',\n        '&:hover': {\n            color: 'white',\n            backgroundColor: '#d362d2',\n        }\n    },\n    button_night_mode: {\n        border: 'solid 4px white',\n        outline: 'solid 4px black',\n        transition: 'border .4s linear, outline .4s linear',\n    },\n    text: {\n        color: 'black',\n        textAlign: 'center',\n        transition: 'background-color .4s linear',\n    },\n    unconnected_text: {\n        opacity: 0,\n    },\n    connected_text_container: {\n        height: '16px',\n    },\n    connected_text: {\n        fontSize: '12px',\n        opacity: 1,\n        transition: 'opacity .2s ease-in-out'\n\n    },\n    nav_title: {\n        margin: '0',\n        fontSize: '28px',\n    },\n    nav_caption: {\n        margin: '8px 0 26px 0',\n        fontSize: '18px',\n    },\n    night_mode_text: {\n        color: 'white',\n        transition: 'background-color .4s linear',\n    },\n    heading_button: {\n        backgroundColor: 'transparent',\n        border: 'none',\n        color: 'grey',\n        cursor: 'pointer',\n        fontSize: '20px',\n        fontFamily: 'Roboto Slab, serif',\n        borderBottom: 'solid 3px transparent',\n\n        '&:hover': {\n            borderBottom: 'solid 3px #5141f1'\n        }\n    },\n    heading_button_active: {\n        color: '#5141f1',\n        opacity: 1,\n        '&:hover': {\n            borderBottom: 'solid 3px transparent'\n        }\n    },\n    section_container: {\n        height: '55vh',\n        overflow: 'auto',\n        textAlign: 'center',\n        padding: '0 16px',\n        boxSizing: 'border-box',\n        '&::-webkit-scrollbar': {\n            width: '0.4em',\n            height: '10px !important'\n        },\n        '&::-webkit-scrollbar-track': {\n            padding: '0 16px'\n        },\n        '&::-webkit-scrollbar-thumb': {\n            backgroundColor: '#5141f1',\n            borderRadius: '8px',\n            border: 'solid 2px black',\n            marginLeft: '10px',\n            transition: 'border .4s linear',\n        }\n    },\n    section_container_night_mode: {\n        '&::-webkit-scrollbar-thumb': {\n            backgroundColor: '#5141f1',\n            borderRadius: '8px',\n            border: 'solid 2px white',\n            marginLeft: '10px',\n            transition: 'border .4s linear',\n        }\n    },\n    dotted_line: {\n        borderBottom: 'dotted 5px black',\n        width: '80%',\n        margin: '0 auto 18px auto',\n        transition: 'border-bottom .4s linear',\n\n    },\n    dotted_line_night_mode: {\n        borderBottom: 'dotted 5px white',\n        transition: 'border-bottom .4s linear',\n    }\n});\n\nenum Sections {\n    About = 0,\n    Roadmap = 1,\n    Team = 2,\n    Faq = 3,\n    DontClick = 4\n}\n\n\n\nconst Navigation = () => {\n    const classes = useStyles();\n    const [walletConnected, setWalletConnected] = React.useState<boolean>(false);\n    const [userWalletAddress, setUserWalletAddress] = React.useState<string>('');\n\n    const [section, setSection] = React.useState<number>(0);\n    const sectionRef = React.useRef<HTMLDivElement>(null);\n    const dispatch = useDispatch();\n    const { theme = {} } = useSelector((state: IThemeState): IThemeState => state.theme)\n    const headings = ['About', 'RoadMap', 'Team', 'FAQ'];\n    const lightMode = theme === Theme.Light;\n\n    React.useEffect(() => {\n        if (sectionRef.current) {\n            sectionRef.current.scrollTop = 0;\n        }\n    }, [section])\n\n    const connectWallet = () => {\n        if ((window as any).ethereum) {\n            (window as any).ethereum\n                .request({ method: 'eth_requestAccounts' })\n                .then((accounts: Array<string>) => {\n                    const [account] = accounts;\n                    (window as any).userWalletAddress = account;\n                    setWalletConnected(true);\n                    setUserWalletAddress(account);\n                });\n        } else {\n            alert('No Web3 Wallet Extension Detected');\n        }\n    };\n\n\n    const renderSection = () => {\n        switch (section) {\n            case Sections.About:\n                return <About />;\n            case Sections.Roadmap:\n                return <Roadmap />;\n            case Sections.Team:\n                return <Team />;\n            case Sections.Faq:\n                return <FAQ />;\n            default:\n                return;\n        }\n    }\n\n    const renderHeadings = () => {\n        return headings.map((heading, i) => {\n            const active = i === section;\n            return (\n                <button\n                    className={`${classes.heading_button} ${active ? classes.heading_button_active : ''}`}\n                    onClick={() => setSection(i)}\n                >\n                    {heading}\n                </button>\n            )\n        })\n    }\n\n    return (\n        <div className={`${classes.root} ${lightMode ? '' : classes.root_night_mode}`}>\n            <div className={classes.button_container}>\n                <ThemeToggle />\n                <div>\n                    <button\n                        className={`\n                        ${classes.button}\n                        ${walletConnected ? classes.mint_button : ''}\n                        ${lightMode ? '' : classes.button_night_mode}\n                    `}\n                        onClick={() => walletConnected ? dispatch(setModalOpen(true)) : connectWallet()}>\n                        {walletConnected ? 'Go To Mint' : 'Connect Wallet'}\n                    </button>\n                    <div className={classes.connected_text_container}>\n                        <p\n                            className={`\n                                ${classes.connected_text_container}\n                                ${userWalletAddress ? classes.connected_text : classes.unconnected_text}\n                            `}\n                            style={{ margin: 0, textAlign: 'center' }}\n                        >\n                            {userWalletAddress ?\n                                `Connected as ...${userWalletAddress.split('').splice(0, 10).join('')}`\n                                : ''}\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <div>\n                <p className={`${classes.text} ${classes.nav_title} ${lightMode ? '' : classes.night_mode_text}`}>🏝️ Welcome To pxplots! 🏝️</p>\n                <p className={`${classes.text} ${classes.nav_caption} ${lightMode ? '' : classes.night_mode_text}`}>\n                    10,000 sm0l plots of land, living on the Ethereum blockchain 🧱⛓️\n                </p>\n            </div>\n            <div className={`${classes.dotted_line} ${lightMode ? '' : classes.dotted_line_night_mode}`} />\n            <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '16px' }}>\n                {renderHeadings()}\n            </div>\n            <div\n                className={`${classes.section_container} ${lightMode ? '' : classes.section_container_night_mode}`}\n                ref={sectionRef}\n            >\n                {renderSection()}\n            </div>\n            <div style={{ height: '60px' }} >\n\n                <SocialLinks />\n            </div>\n        </div>\n    );\n};\n\nexport default Navigation;\n","C:\\Side projects\\pxplots\\src\\Redux\\store\\index.ts",[],"C:\\Side projects\\pxplots\\src\\Redux\\slices\\themeSlice\\index.ts",[],"C:\\Side projects\\pxplots\\src\\enums\\themes.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\Navigation\\Roadmap\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\Navigation\\About\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\Navigation\\Team\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\Navigation\\FAQ\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\SocialLinks\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\Grid\\GridBoxes\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\ThemeToggle\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\Redux\\slices\\mintSlice\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\MintModal\\index.tsx",["135","136"],"import * as React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useSelector } from 'react-redux';\nimport { Theme } from '../../enums/themes';\nimport { IThemeState } from '../../Redux/slices/themeSlice';\n\nconst useStyles = createUseStyles({\n    overlay: {\n        background: 'rgba(0, 0, 0, 0.75)',\n        height: '100vh',\n        width: '100vw',\n        position: 'absolute',\n        animation: 'fade-in 2s',\n        transition: 'background .4s linear',\n    },\n    modal_container: {\n        fontFamily: 'Roboto Slab, serif',\n        padding: '24px 32px 32px 32px',\n        background: 'rgb(255, 255, 255, 1)',\n        border: 'solid 4px black',\n        borderRadius: '8px',\n        height: '400px',\n        width: '400px',\n        position: 'absolute',\n        left: '50%',\n        top: '42.5%',\n        transform: 'translate(-50%, -50%)',\n        textAlign: 'center',\n        // '@media screen and (max-width: 600px)': {\n        //     width: '75%'\n        // }\n    },\n});\n\nconst MintModal = () => {\n    const classes = useStyles();\n    const { theme = {} } = useSelector((state: IThemeState): IThemeState => state.theme)\n    // const lightMode = theme === Theme.Light;\n\n    return (\n        <div className={classes.overlay}>\n            <div className={classes.modal_container}>x</div>\n\n        </div>\n    )\n}\n\nexport default MintModal;\n\n","C:\\Side projects\\pxplots\\src\\components\\pxplotCube\\index.tsx",["137"],"import * as React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { useSelector } from 'react-redux';\r\nimport { Theme } from '../../enums/themes';\r\nimport { IThemeState } from '../../Redux/slices/themeSlice';\r\n\r\nconst useStyles = createUseStyles({\r\n    cube: {\r\n        borderRadius: '4px',\r\n        height: '38px',\r\n        width: '38px',\r\n        transition: 'background-color .25s ease-in-out'\r\n    },\r\n    cube_container: {\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }\r\n\r\n});\r\n\r\nconst getBgColour = () => {\r\n    const randomColour = Math.floor(Math.random() * 16777215).toString(16);\r\n    return `#${randomColour}`;\r\n};\r\n\r\n\r\nconst PxplotCube = () => {\r\n    const [bgColour, setBgColour] = React.useState<string>('');\r\n    const classes = useStyles();\r\n    const { theme } = useSelector((state: IThemeState) => state.theme);\r\n    const lightMode = theme === Theme.Light;\r\n\r\n    React.useEffect(() => {\r\n        interval();\r\n    }, [])\r\n\r\n    const interval = () => {\r\n        setInterval(() => {\r\n            const newBgColour = getBgColour();\r\n            setBgColour(newBgColour)\r\n        }, 1000)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.cube_container}>\r\n            <div\r\n                className={classes.cube}\r\n                style={{\r\n                    backgroundColor: bgColour,\r\n                    // border: `solid 3px ${lightMode ? 'black' : 'white'}`\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PxplotCube;\r\n","C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\ExamplePageB\\index.tsx",["138","139","140"],"import * as React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { useSelector } from 'react-redux';\r\nimport { Theme } from '../../../enums/themes';\r\nimport { IThemeState } from '../../../Redux/slices/themeSlice';\r\nimport Flickity from 'react-flickity-component'\r\n\r\nconst useStyles = createUseStyles({\r\n\r\n    container: {\r\n        fontFamily: 'Roboto Slab, serif',\r\n        height: '100%',\r\n        width: '100%',\r\n        opacity: 0.25,\r\n        backgroundColor: 'black',\r\n        transition: 'opacity .2s ease-in-out',\r\n\r\n        '&:hover': {\r\n            transition: 'opacity .2s ease-in-out',\r\n            opacity: 1\r\n        }\r\n    },\r\n    slide_container: {\r\n        display: 'flex',\r\n        flexFlow: 'column',\r\n        height: 'inherit',\r\n        width: 'inherit'\r\n    },\r\n    flickity_slider: {\r\n        height: 'inherit',\r\n\r\n        '& .flickity-page-dots': {\r\n            bottom: '10px !important'\r\n        },\r\n\r\n        '& .flickity-button': {\r\n            backgroundColor: 'transparent'\r\n        }\r\n    },\r\n    header_container: {\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        flexFlow: 'row',\r\n        padding: '6px',\r\n        justifyContent: 'space-between'\r\n    },\r\n    header_text: {\r\n        fontWeight: 900,\r\n        fontSize: '16px',\r\n        margin: 0,\r\n\r\n    },\r\n    circles_container: {\r\n        display: 'flex',\r\n        flexFlow: 'row',\r\n        justifyContent: 'space-between',\r\n        width: '58px'\r\n    },\r\n    circle: {\r\n        height: '16px',\r\n        width: '16px',\r\n        backgroundColor: 'black',\r\n        borderRadius: '100%',\r\n\r\n        '&:hover': {\r\n            cursor: 'pointer',\r\n            opacity: .6\r\n        }\r\n    },\r\n    half_container: {\r\n        alignContent: 'space-between',\r\n        display: 'flex',\r\n        flex: 1,\r\n        flexFlow: 'column',\r\n        padding: '16px'\r\n    },\r\n    half_container_header_text: {\r\n        margin: 0\r\n    },\r\n    half_container_center: {\r\n        margin: 'auto 0'\r\n    },\r\n    half_container_title: {\r\n        fontWeight: 900,\r\n        fontSize: '20px',\r\n        margin: '0 0 8px 0'\r\n    },\r\n    half_container_text: {\r\n        fontWeight: 500,\r\n        fontSize: '12px',\r\n        margin: 0\r\n    },\r\n    cream_header: {\r\n        margin: '8px 12px 8px 0',\r\n        textAlign: 'right'\r\n    },\r\n    cream_center_container: {\r\n        backgroundColor: 'white',\r\n        boxShadow: 'rgb(0 0 0) 12px 12px 0px 0px',\r\n        height: '36%',\r\n        margin: '15% 0 0 8%',\r\n        padding: '16px',\r\n        width: '45%',\r\n    },\r\n    cream_text_1: {\r\n        fontSize: '8px',\r\n        margin: '0 0 4px 0'\r\n    },\r\n    cream_text_2: {\r\n        fontSize: '14px',\r\n        margin: '0 0 4px 0'\r\n    },\r\n    cream_text_3: {\r\n        fontSize: '10px',\r\n        margin: '0 0 4px 0'\r\n    }\r\n\r\n})\r\n\r\nconst ExampleMarketPageB = () => {\r\n    const classes = useStyles();\r\n\r\n    const flickityOptions = {\r\n        contain: true,\r\n        initialIndex: 0,\r\n        draggable: false,\r\n        freeScroll: true,\r\n        wrapAround: true,\r\n        groupCells: true\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <Flickity\r\n                className={`carousel ${classes.flickity_slider}`}\r\n                elementType={'div'}\r\n                options={flickityOptions}\r\n                disableImagesLoaded={false}\r\n                reloadOnUpdate\r\n                static\r\n            >\r\n                <div className={classes.slide_container} style={{ backgroundColor: '#e4274e' }} >\r\n                    <div className={classes.header_container}>\r\n                        <p className={classes.header_text}>Your Name</p>\r\n                        <div className={classes.circles_container}>\r\n                            <span className={classes.circle} />\r\n                            <a href={'https://www.youtube.com/watch?v=dQw4w9WgXcQ'} className={classes.circle}>\r\n                                <span className={classes.circle} />\r\n                            </a>\r\n                            <span className={classes.circle} />\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ margin: 'auto auto 22% auto' }}>\r\n                        <p style={{ margin: '0', fontSize: '40px' }}>\r\n                            Welcome.\r\n                        </p>\r\n                        <p style={{ margin: '4px 0', fontSize: '12px', textAlign: 'center' }}>\r\n                            To my NFT marketpage\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.slide_container} style={{ backgroundColor: '#14eb9c', display: 'flex', flexFlow: 'row' }} >\r\n                    <div className={classes.half_container}>\r\n                        <div style={{ height: '80%', width: '60%', backgroundColor: 'white', margin: 'auto' }} />\r\n                    </div>\r\n                    <div className={classes.half_container} style={{ backgroundColor: 'white' }}>\r\n                        <p className={classes.half_container_header_text}>\r\n                            Hello World\r\n                        </p>\r\n                        <div className={classes.half_container_center}>\r\n                            <p className={classes.half_container_title}>\r\n                                Here is an introduction\r\n                            </p>\r\n                            <p className={classes.half_container_text}>\r\n                                Who says your page needs to scroll vertically? Maybe you want it to move horizontally. Well, it can!\r\n                            </p>\r\n                        </div>\r\n                        <div className={classes.circles_container}>\r\n                            <span className={classes.circle} />\r\n                            <span className={classes.circle} />\r\n                            <span className={classes.circle} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className={classes.slide_container} style={{ backgroundColor: '#f1f1c9' }} >\r\n                    <p className={classes.cream_header}>\r\n                        Maybe a background image here?\r\n                    </p>\r\n                    <div className={classes.cream_center_container}>\r\n                        <p className={classes.cream_text_1}>\r\n                            Some sm0l text here\r\n                        </p>\r\n                        <p className={classes.cream_text_2}>\r\n                            And Large Text Here! Hello!\r\n                        </p>\r\n                        <p className={classes.cream_text_3}>\r\n                            You can create & color shapes for your text and images to sit within. Set your own backgrounds\r\n                            Or just have one big full screen image of your art, if you prefer.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.slide_container} style={{ backgroundColor: '#12e7cf', display: 'flex', flexFlow: 'row' }} >\r\n                    <div className={classes.half_container}>\r\n                        <p style={{ margin: 'auto auto auto 15%' }}>However you want your space to look. It's yours.</p>\r\n                    </div>\r\n                    <div className={classes.half_container} style={{ justifyContent: 'center', position: 'relative' }} >\r\n                        <div style={{ height: '150px', width: '75px', backgroundColor: 'white', position: 'absolute' }} />\r\n                        <div style={{ height: '125px', width: '125px', borderRadius: '100%', backgroundColor: 'black', marginLeft: '16px' }} />\r\n                    </div>\r\n                </div>\r\n\r\n            </Flickity>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExampleMarketPageB;\r\n\r\n","C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\ExamplePageA\\index.tsx",["141"],"C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\ExampleMarketPageC\\index.tsx",["142","143","144"],"import * as React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { useSelector } from 'react-redux';\r\nimport { XAxis } from '../../../enums';\r\nimport { Theme } from '../../../enums/themes';\r\nimport { IThemeState } from '../../../Redux/slices/themeSlice';\r\n\r\nconst useStyles = createUseStyles({\r\n\r\n    container: {\r\n        boxSizing: 'border-box',\r\n        fontFamily: 'Roboto Slab, serif',\r\n        height: '100%',\r\n        width: '100%',\r\n        opacity: 0.25,\r\n        backgroundColor: 'black',\r\n        transition: 'opacity .2s ease-in-out',\r\n        display: 'flex',\r\n        flexFlow: 'row',\r\n        // paddingLeft: '115px',\r\n        zIndex: 2,\r\n\r\n        '&:hover': {\r\n            transition: 'opacity .2s ease-in-out',\r\n            opacity: 1\r\n        }\r\n    },\r\n    nav: {\r\n        backgroundColor: 'white',\r\n        boxSizing: 'border-box',\r\n        display: 'flex',\r\n        flexFlow: 'column',\r\n        height: '100%',\r\n        left: 0,\r\n        padding: '8px',\r\n        position: 'absolute',\r\n        width: '115px',\r\n        zIndex: 1,\r\n    },\r\n    right_container: {\r\n        display: 'flex',\r\n        flexFlow: 'row',\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden',\r\n        width: '100%',\r\n        zIndex: 1,\r\n\r\n        '&::-webkit-scrollbar': {\r\n            width: '0.4em',\r\n            height: '10px !important'\r\n        },\r\n\r\n        '&::-webkit-scrollbar-track': {\r\n            padding: '0 16px'\r\n        },\r\n\r\n        '&::-webkit-scrollbar-thumb': {\r\n            backgroundColor: '#5141f1',\r\n            borderRadius: '8px',\r\n            border: 'solid 2px black',\r\n            marginLeft: '10px',\r\n            transition: 'border .4s linear',\r\n        }\r\n    },\r\n    right_half_container: {\r\n        flex: '1',\r\n        width: '100%',\r\n        marginRight: '4px'\r\n    },\r\n    rect: {\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        // '&:hover': {\r\n        //     opacity: 0.5,\r\n        //     transition: 'opacity .2s ease-in-out'\r\n        // }\r\n    },\r\n    circles_container: {\r\n        bottom: '6px',\r\n        display: 'flex',\r\n        flexFlow: 'row',\r\n        justifyContent: 'space-between',\r\n        left: '29px',\r\n        position: 'absolute',\r\n        width: '58px'\r\n    },\r\n    circle: {\r\n        backgroundColor: 'black',\r\n        borderRadius: '100%',\r\n        cursor: 'pointer',\r\n        height: '16px',\r\n        width: '16px',\r\n        zIndex: 4,\r\n\r\n        '&:hover': {\r\n            opacity: .6\r\n        }\r\n    },\r\n    text: {\r\n        fontSize: '12px',\r\n        height: 'fit-content',\r\n        margin: 0,\r\n        opacity: 0,\r\n        textAlign: 'center',\r\n        transition: 'opacity .2s ease-in-out'\r\n    },\r\n    text_hovered: {\r\n        opacity: 1,\r\n        transition: 'opacity .2s ease-in-out'\r\n    }\r\n})\r\n\r\ninterface IHoveredRect {\r\n    index: number,\r\n    xAxis: xAxis\r\n}\r\n\r\ntype xAxis = XAxis.Left | XAxis.Right;\r\nconst ExampleMarketPageC = () => {\r\n    const classes = useStyles();\r\n    const [hoveredRect, setHoveredRect] = React.useState<IHoveredRect | boolean>(false);\r\n    const rectsLeft = [\r\n        { height: 105, bgColour: '#f187fa' },\r\n        { height: 125, bgColour: '#e4274e' },\r\n        { height: 125, bgColour: '#3effdb' },\r\n        { height: 155, bgColour: '#5141f1' },\r\n        { height: 195, bgColour: '#8dc2ff' },\r\n        { height: 100, bgColour: '#8dfffd' },\r\n        { height: 100, bgColour: '#dbff8d' },\r\n        { height: 155, bgColour: '#f39191' },\r\n        { height: 155, bgColour: '#e4274e' },\r\n        { height: 100, bgColour: '#eb67b3' },\r\n        { height: 100, bgColour: '#22a6c0' },\r\n        { height: 100, bgColour: '#8d8dff' },\r\n        { height: 155, bgColour: '#89c0ff' },\r\n        { height: 115, bgColour: '#22a6c0' },\r\n    ]\r\n\r\n    const rectsRight = [\r\n        { height: 165, bgColour: '#22a6c0' },\r\n        { height: 170, bgColour: '#8d8dff' },\r\n        { height: 155, bgColour: '#89c0ff' },\r\n        { height: 165, bgColour: '#14eb9c' },\r\n        { height: 165, bgColour: '#22a6c0' },\r\n        { height: 170, bgColour: '#8d8dff' },\r\n        { height: 155, bgColour: '#89c0ff' },\r\n        { height: 165, bgColour: '#14eb9c' },\r\n        { height: 165, bgColour: '#8d8dff' },\r\n        { height: 170, bgColour: '#89c0ff' },\r\n        { height: 155, bgColour: '#14eb9c' },\r\n    ]\r\n\r\n    const createRect = (\r\n        height: number,\r\n        backgroundColor: string,\r\n        index: number,\r\n        xAxis: xAxis,\r\n        active?: boolean\r\n    ): React.ReactNode => {\r\n\r\n        const tg = (hoveredRect as IHoveredRect).xAxis === XAxis.Left && index === (11 ?? false);\r\n\r\n        return (\r\n            <div style={{\r\n                height,\r\n                width: '100%',\r\n                margin: '4px',\r\n                cursor: 'pointer',\r\n                position: 'relative',\r\n                backgroundColor,\r\n            }}\r\n                onMouseOver={() => setHoveredRect({ index, xAxis })}\r\n                onMouseLeave={() => setHoveredRect(false)}\r\n            >\r\n\r\n                {\r\n                    // active ?\r\n                    <>\r\n                        <div\r\n                            style={{\r\n                                height,\r\n                                width: '100%',\r\n                                cursor: 'pointer',\r\n                                backgroundColor: active ? 'white' : 'transparent',\r\n                                opacity: active ? 0.7 : 1,\r\n                                transition: 'background-color .2s ease-in-out, opacity .2s ease-in-out'\r\n                            }}\r\n                            className={classes.rect}\r\n                        >\r\n                        </div>\r\n                        <div style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\r\n                            <p className={`${classes.text} ${active ? classes.text_hovered : ''}`}>{tg ? 'You Just Lost The Game' : 'Artwork Name'}</p>\r\n                            <p className={`${classes.text} ${active ? classes.text_hovered : ''}`}>{tg ? '' : '0.3ETH'}</p>\r\n                        </div>\r\n                    </>\r\n                    // : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderRects = (rects: Array<{ height: number, bgColour: string }>, xAxis: xAxis): React.ReactNode => {\r\n        return rects.map((rect, i) => {\r\n            const active = (hoveredRect as IHoveredRect).xAxis === xAxis && i === ((hoveredRect as IHoveredRect).index ?? false);\r\n            return createRect(rect.height, rect.bgColour, i, xAxis, active)\r\n        })\r\n    }\r\n\r\n    const renderCircles = () => {\r\n        return (\r\n            <div className={classes.circles_container}>\r\n                {Array.from(Array(3)).map((_, i) => {\r\n                    return i === 2 ?\r\n                        <a href={'https://i.kym-cdn.com/entries/icons/mobile/000/012/748/circle.jpg'} className={classes.circle}>\r\n                            <span className={classes.circle} />\r\n                        </a>\r\n                        : <span className={classes.circle} />\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            {renderCircles()}\r\n\r\n            <div className={classes.nav}>\r\n                <p style={{ fontSize: '14px', textAlign: 'center' }}>Your Page</p>\r\n                <p style={{ fontSize: '10px', textAlign: 'center' }}>Maybe you prefer less text and more images</p>\r\n                <p style={{ fontSize: '10px', textAlign: 'center' }}>You can see where we've going with this. There will be many options</p>\r\n\r\n                <div style={{ backgroundColor: 'black', height: '34px', width: '34px', margin: '8px auto 0' }} />\r\n            </div>\r\n            <div className={classes.right_container}>\r\n                <div style={{ width: '115px' }} />\r\n                <div className={classes.right_half_container}>\r\n                    {renderRects(rectsLeft, XAxis.Left)}\r\n                </div>\r\n                <div className={classes.right_half_container}>\r\n                    {renderRects(rectsRight, XAxis.Right)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExampleMarketPageC;\r\n\r\n","C:\\Side projects\\pxplots\\src\\enums\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\ExampleMarketPageD\\index.tsx",["145","146","147","148"],"import * as React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { useSelector } from 'react-redux';\r\nimport { XAxis } from '../../../enums';\r\nimport { Theme } from '../../../enums/themes';\r\nimport { IThemeState } from '../../../Redux/slices/themeSlice';\r\n\r\nconst useStyles = createUseStyles({\r\n\r\n    container: {\r\n        boxSizing: 'border-box',\r\n        fontFamily: 'Roboto Slab, serif',\r\n        height: '100%',\r\n        width: '100%',\r\n        opacity: 0.25,\r\n        backgroundColor: 'black',\r\n        transition: 'opacity .2s ease-in-out',\r\n        display: 'flex',\r\n        flexFlow: 'column',\r\n        '&:hover': {\r\n            transition: 'opacity .2s ease-in-out',\r\n            opacity: 1\r\n        }\r\n    },\r\n    section: {\r\n        // height: '100%'\r\n    }\r\n})\r\n\r\ninterface IHoveredRect {\r\n    index: number,\r\n    xAxis: xAxis\r\n}\r\n\r\ntype xAxis = XAxis.Left | XAxis.Right;\r\nconst ExampleMarketPageC = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.container} style={{ scrollSnapType: 'y mandatory' }}>\r\n            <div style={{ height: '100%', width: '100%', minHeight: '100%', scrollSnapAlign: 'start', backgroundColor: '#e4b727' }} />\r\n            <div style={{ height: '100%', width: '100%', minHeight: '100%', scrollSnapAlign: 'start', backgroundColor: '#e46027' }} />\r\n            <div style={{ height: '100%', width: '100%', minHeight: '100%', scrollSnapAlign: 'start', backgroundColor: 'green' }} />\r\n            <div style={{ height: '100%', width: '100%', minHeight: '100%', scrollSnapAlign: 'start', backgroundColor: 'yellow' }} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExampleMarketPageC;\r\n\r\n",{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":29,"column":5,"nodeType":"155","endLine":29,"endColumn":7,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":31,"column":8,"nodeType":"159","messageId":"160","endLine":31,"endColumn":17},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"157","severity":1,"message":"161","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":21},{"ruleId":"157","severity":1,"message":"162","line":27,"column":8,"nodeType":"159","messageId":"160","endLine":27,"endColumn":15},{"ruleId":"157","severity":1,"message":"163","line":28,"column":17,"nodeType":"159","messageId":"160","endLine":28,"endColumn":26},{"ruleId":"157","severity":1,"message":"164","line":8,"column":23,"nodeType":"159","messageId":"160","endLine":8,"endColumn":31},{"ruleId":"157","severity":1,"message":"165","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":15},{"ruleId":"157","severity":1,"message":"166","line":37,"column":13,"nodeType":"159","messageId":"160","endLine":37,"endColumn":18},{"ruleId":"157","severity":1,"message":"167","line":32,"column":11,"nodeType":"159","messageId":"160","endLine":32,"endColumn":20},{"ruleId":"157","severity":1,"message":"168","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":21},{"ruleId":"157","severity":1,"message":"165","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":15},{"ruleId":"157","severity":1,"message":"169","line":5,"column":10,"nodeType":"159","messageId":"160","endLine":5,"endColumn":21},{"ruleId":"157","severity":1,"message":"167","line":150,"column":11,"nodeType":"159","messageId":"160","endLine":150,"endColumn":20},{"ruleId":"157","severity":1,"message":"168","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":21},{"ruleId":"157","severity":1,"message":"165","line":5,"column":10,"nodeType":"159","messageId":"160","endLine":5,"endColumn":15},{"ruleId":"157","severity":1,"message":"169","line":6,"column":10,"nodeType":"159","messageId":"160","endLine":6,"endColumn":21},{"ruleId":"157","severity":1,"message":"168","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":21},{"ruleId":"157","severity":1,"message":"165","line":5,"column":10,"nodeType":"159","messageId":"160","endLine":5,"endColumn":15},{"ruleId":"157","severity":1,"message":"169","line":6,"column":10,"nodeType":"159","messageId":"160","endLine":6,"endColumn":21},{"ruleId":"157","severity":1,"message":"170","line":30,"column":11,"nodeType":"159","messageId":"160","endLine":30,"endColumn":23},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["173"],"@typescript-eslint/no-unused-vars","'openModal' is assigned a value but never used.","Identifier","unusedVar","'IModalState' is defined but never used.","'classes' is assigned a value but never used.","'setActive' is assigned a value but never used.","'setTheme' is defined but never used.","'Theme' is defined but never used.","'theme' is assigned a value but never used.","'lightMode' is assigned a value but never used.","'useSelector' is defined but never used.","'IThemeState' is defined but never used.","'IHoveredRect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},"Update the dependencies array to be: [dispatch]",{"range":"176","text":"177"},[799,801],"[dispatch]"]