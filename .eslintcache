[{"C:\\Side projects\\pxplots\\src\\index.js":"1","C:\\Side projects\\pxplots\\src\\App.js":"2","C:\\Side projects\\pxplots\\src\\components\\Wrapper\\index.tsx":"3","C:\\Side projects\\pxplots\\src\\components\\Modal\\index.tsx":"4","C:\\Side projects\\pxplots\\src\\components\\Navigation\\index.tsx":"5","C:\\Side projects\\pxplots\\src\\components\\Grid\\GridContainer\\index.tsx":"6","C:\\Side projects\\pxplots\\src\\components\\Navigation\\About\\index.tsx":"7","C:\\Side projects\\pxplots\\src\\components\\Navigation\\Roadmap\\index.tsx":"8","C:\\Side projects\\pxplots\\src\\components\\Navigation\\Team\\index.tsx":"9","C:\\Side projects\\pxplots\\src\\components\\SocialLinks\\index.tsx":"10","C:\\Side projects\\pxplots\\src\\components\\Navigation\\FAQ\\index.tsx":"11","C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\index.tsx":"12","C:\\Side projects\\pxplots\\src\\components\\Grid\\GridBoxes\\index.tsx":"13","C:\\Side projects\\pxplots\\src\\hooks\\index.tsx":"14","C:\\Side projects\\pxplots\\src\\components\\Grid\\GridBox\\index.tsx":"15"},{"size":192,"mtime":1643048919064,"results":"16","hashOfConfig":"17"},{"size":200,"mtime":1643048919059,"results":"18","hashOfConfig":"17"},{"size":851,"mtime":1644088600395,"results":"19","hashOfConfig":"17"},{"size":16574,"mtime":1644074440174,"results":"20","hashOfConfig":"17"},{"size":6422,"mtime":1644088555791,"results":"21","hashOfConfig":"17"},{"size":595,"mtime":1644088429816,"results":"22","hashOfConfig":"17"},{"size":4744,"mtime":1644074462115,"results":"23","hashOfConfig":"17"},{"size":3815,"mtime":1644070258002,"results":"24","hashOfConfig":"17"},{"size":2573,"mtime":1644068752516,"results":"25","hashOfConfig":"17"},{"size":1614,"mtime":1644087174632,"results":"26","hashOfConfig":"17"},{"size":2522,"mtime":1644070055001,"results":"27","hashOfConfig":"17"},{"size":1478,"mtime":1644080796714,"results":"28","hashOfConfig":"17"},{"size":889,"mtime":1644088466196,"results":"29","hashOfConfig":"17"},{"size":202,"mtime":1643315718011,"results":"30","hashOfConfig":"17"},{"size":672,"mtime":1644088397214,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"danulq",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},"C:\\Side projects\\pxplots\\src\\index.js",[],["68","69"],"C:\\Side projects\\pxplots\\src\\App.js",[],"C:\\Side projects\\pxplots\\src\\components\\Wrapper\\index.tsx",["70","71"],"import * as React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport GridContainer from '../Grid/GridContainer/';\nimport Navigation from '../Navigation/';\nimport Menu from '../Menu/';\nimport Modal from '../Modal/';\n\nconst useStyles = createUseStyles({\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tflexFlow: 'column'\n\t}\n});\n\nconst Wrapper = () => {\n\tconst [modalOpen, setModalOpen] = React.useState<boolean>(false);\n\tconst classes = useStyles();\n\n\tconst openModal = () => setModalOpen(true);\n\n\tconst closeModal = () => setModalOpen(false);\n\n\treturn (\n\t\t<div className={classes.container}>\n\t\t\t<Modal open={modalOpen} closeModal={closeModal} />\n\t\t\t<div style={{ height: '100vh', width: '100vw', display: 'flex' }}>\n\t\t\t\t<Navigation />\n\t\t\t\t<GridContainer />\n\t\t\t</div>\n\t\t\t{/* <Menu openModal={openModal} /> */}\n\t\t</div>\n\t);\n};\n\nexport default Wrapper;\n","C:\\Side projects\\pxplots\\src\\components\\Modal\\index.tsx",[],["72","73"],"C:\\Side projects\\pxplots\\src\\components\\Navigation\\index.tsx",["74","75"],"import * as React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport About from './About/';\r\nimport Roadmap from './Roadmap/';\r\nimport Team from './Team/';\r\nimport FAQ from './FAQ/';\r\nimport SocialLinks from '../SocialLinks/';\r\n\r\nconst useStyles = createUseStyles({\r\n    root: {\r\n        backgroundColor: 'white',\r\n        borderRight: 'solid 5px #5141f1',\r\n        borderTopRightRadius: '8px',\r\n        borderBottomRightRadius: '8px',\r\n        boxShadow: 'rgb(0 0 0) 8px 12px 34px 0px',\r\n        fontFamily: 'Roboto Slab, serif',\r\n        height: '100%',\r\n        padding: '16px',\r\n        boxSizing: 'border-box',\r\n        width: '550px',\r\n        zIndex: 1\r\n    },\r\n    button_container: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    button: {\r\n        backgroundColor: '#5141f1',\r\n        border: 'solid 4px black',\r\n        borderRadius: '5px',\r\n        color: 'white',\r\n        cursor: 'pointer',\r\n        fontFamily: 'Roboto Slab, serif',\r\n        fontSize: '18px',\r\n        outline: 'solid 4px white',\r\n        marginBottom: '30px',\r\n        minHeight: '48px',\r\n        width: '180px',\r\n        '&:hover': {\r\n            backgroundColor: '#fefd78',\r\n            color: 'black'\r\n        },\r\n        '&:active': {\r\n            backgroundColor: '#fffd00',\r\n            boxShadow: 'inset 0 0 16px #000000'\r\n        }\r\n    },\r\n    mint_button: {\r\n        border: 'solid 4px black',\r\n        // outline: 'solid 4px black',\r\n        backgroundColor: '#3effdb',\r\n        color: 'black',\r\n        '&:hover': {\r\n            color: 'white',\r\n            backgroundColor: '#ff5ddc',\r\n        }\r\n    },\r\n    text: {\r\n        color: 'black',\r\n        textAlign: 'center'\r\n    },\r\n    nav_title: {\r\n        margin: '0',\r\n        fontSize: '28px',\r\n\r\n    },\r\n    nav_caption: {\r\n        margin: '8px 0 26px 0',\r\n        fontSize: '18px',\r\n    },\r\n    heading_button: {\r\n        backgroundColor: 'white',\r\n        border: 'none',\r\n        color: 'grey',\r\n        cursor: 'pointer',\r\n        fontSize: '20px',\r\n        fontFamily: 'Roboto Slab, serif',\r\n        borderBottom: 'solid 3px transparent',\r\n\r\n        '&:hover': {\r\n            borderBottom: 'solid 3px #5141f1'\r\n        }\r\n    },\r\n    heading_button_active: {\r\n        color: '#5141f1',\r\n        opacity: 1,\r\n        '&:hover': {\r\n            borderBottom: 'solid 3px transparent'\r\n        }\r\n    },\r\n    section_container: {\r\n        height: '55vh',\r\n        overflow: 'auto',\r\n        textAlign: 'center',\r\n        padding: '0 16px',\r\n        boxSizing: 'border-box',\r\n        '&::-webkit-scrollbar': {\r\n            width: '0.4em',\r\n            height: '10px !important'\r\n        },\r\n        '&::-webkit-scrollbar-track': {\r\n            padding: '0 16px'\r\n        },\r\n        '&::-webkit-scrollbar-thumb': {\r\n            backgroundColor: '#5141f1',\r\n            borderRadius: '8px',\r\n            border: 'solid 2px white',\r\n            marginLeft: '10px'\r\n        }\r\n    }\r\n});\r\n\r\nenum Sections {\r\n    About = 0,\r\n    Roadmap = 1,\r\n    Team = 2,\r\n    Faq = 3,\r\n    DontClick = 4\r\n}\r\n\r\n\r\n\r\nconst Navigation = () => {\r\n    const classes = useStyles();\r\n    const [walletConnected, setWalletConnected] = React.useState<boolean>(false);\r\n    const [section, setSection] = React.useState<number>(0);\r\n    const [mintOpen, setMintOpen] = React.useState<boolean>(false);\r\n    const headings = ['About', 'RoadMap', 'Team', 'FAQ'];\r\n    const sectionRef = React.useRef<HTMLDivElement>(null);\r\n\r\n    React.useEffect(() => {\r\n        if (sectionRef.current) {\r\n            sectionRef.current.scrollTop = 0;\r\n        }\r\n    }, [section])\r\n\r\n    const connectWallet = () => {\r\n        if ((window as any).ethereum) {\r\n            (window as any).ethereum\r\n                .request({ method: 'eth_requestAccounts' })\r\n                .then((accounts: Array<string>) => {\r\n                    console.log('connected')\r\n                    const [account] = accounts;\r\n                    (window as any).userWalletAddress = account;\r\n                    setWalletConnected(true);\r\n                });\r\n        } else {\r\n            alert('No Web3 Wallet Extension Detected');\r\n        }\r\n    };\r\n\r\n\r\n    const renderSection = () => {\r\n        switch (section) {\r\n            case Sections.About:\r\n                return <About />;\r\n            case Sections.Roadmap:\r\n                return <Roadmap />;\r\n            case Sections.Team:\r\n                return <Team />;\r\n            case Sections.Faq:\r\n                return <FAQ />;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    const renderHeadings = () => {\r\n        return headings.map((heading, i) => {\r\n            const active = i === section;\r\n            return (\r\n                <button\r\n                    className={`${classes.heading_button} ${active ? classes.heading_button_active : ''}`}\r\n                    onClick={() => setSection(i)}\r\n\r\n                >\r\n                    {heading}\r\n                </button>\r\n            )\r\n        })\r\n    }\r\n\r\n    const setMintWindowOpen = () => {\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.button_container}>\r\n                <button\r\n                    className={`${classes.button} ${walletConnected ? classes.mint_button : ''}`}\r\n                    onClick={() => walletConnected ? setMintOpen(true) : connectWallet()}>\r\n                    {walletConnected ? 'Go To Mint' : 'Connect Wallet'}\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <p className={`${classes.text} ${classes.nav_title}`}>🏝️ Welcome To pxplots! 🏝️</p>\r\n                <p className={`${classes.text} ${classes.nav_caption}`}>\r\n                    10,000 sm0l plots of land, living on the ethereum blockchain 🧱⛓️\r\n                </p>\r\n            </div>\r\n            <div style={{ borderBottom: 'dotted 5px black', width: '80%', margin: '0 auto 18px auto' }} />\r\n            <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '16px' }}>\r\n                {renderHeadings()}\r\n            </div>\r\n            <div className={classes.section_container} ref={sectionRef}>\r\n                {renderSection()}\r\n            </div>\r\n            <div style={{ height: '60px' }} >\r\n\r\n                <SocialLinks />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","C:\\Side projects\\pxplots\\src\\components\\Grid\\GridContainer\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\Navigation\\About\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\Navigation\\Roadmap\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\Navigation\\Team\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\SocialLinks\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\Navigation\\FAQ\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\Grid\\GridBoxes\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\hooks\\index.tsx",[],["76","77"],"C:\\Side projects\\pxplots\\src\\components\\Grid\\GridBox\\index.tsx",["78","79"],"import * as React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\ninterface IProps {\r\n\tbgColour: string;\r\n}\r\n\r\nconst useStyles = createUseStyles({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexFlow: 'row wrap'\r\n\t},\r\n\troot: {\r\n\t\t//\r\n\t},\r\n\tdeadPixels: {\r\n\t\tbackgroundColor: 'black',\r\n\t\tflex: 1\r\n\t}\r\n});\r\n\r\ninterface IProps {\r\n\tbgColour: string;\r\n}\r\n\r\nconst GridBox = ({ bgColour }: IProps) => {\r\n\tconst classes = useStyles();\r\n\tconst [active, setActive] = React.useState<boolean>(false);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tbackgroundColor: active ? 'white' : bgColour,\r\n\t\t\t\theight: '20px',\r\n\t\t\t\twidth: '20px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default GridBox;\r\n",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":12},{"ruleId":"84","severity":1,"message":"88","line":19,"column":8,"nodeType":"86","messageId":"87","endLine":19,"endColumn":17},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"89","line":127,"column":12,"nodeType":"86","messageId":"87","endLine":127,"endColumn":20},{"ruleId":"84","severity":1,"message":"90","line":183,"column":11,"nodeType":"86","messageId":"87","endLine":183,"endColumn":28},{"ruleId":"80","replacedBy":"91"},{"ruleId":"82","replacedBy":"92"},{"ruleId":"84","severity":1,"message":"93","line":27,"column":8,"nodeType":"86","messageId":"87","endLine":27,"endColumn":15},{"ruleId":"84","severity":1,"message":"94","line":28,"column":17,"nodeType":"86","messageId":"87","endLine":28,"endColumn":26},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"@typescript-eslint/no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'openModal' is assigned a value but never used.","'mintOpen' is assigned a value but never used.","'setMintWindowOpen' is assigned a value but never used.",["95"],["96"],"'classes' is assigned a value but never used.","'setActive' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]