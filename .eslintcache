[{"C:\\Side projects\\pxplots\\src\\index.js":"1","C:\\Side projects\\pxplots\\src\\App.js":"2","C:\\Side projects\\pxplots\\src\\components\\Wrapper\\index.tsx":"3","C:\\Side projects\\pxplots\\src\\components\\Grid\\GridContainer\\index.tsx":"4","C:\\Side projects\\pxplots\\src\\components\\Grid\\GridBox\\index.tsx":"5","C:\\Side projects\\pxplots\\src\\components\\Menu\\index.tsx":"6","C:\\Side projects\\pxplots\\src\\helpers\\storage.ts":"7","C:\\Side projects\\pxplots\\src\\components\\Navigation\\index.tsx":"8","C:\\Side projects\\pxplots\\src\\Redux\\store\\index.ts":"9","C:\\Side projects\\pxplots\\src\\Redux\\slices\\themeSlice\\index.ts":"10","C:\\Side projects\\pxplots\\src\\enums\\themes.tsx":"11","C:\\Side projects\\pxplots\\src\\components\\Navigation\\Roadmap\\index.tsx":"12","C:\\Side projects\\pxplots\\src\\components\\Navigation\\About\\index.tsx":"13","C:\\Side projects\\pxplots\\src\\components\\Navigation\\Team\\index.tsx":"14","C:\\Side projects\\pxplots\\src\\components\\Navigation\\FAQ\\index.tsx":"15","C:\\Side projects\\pxplots\\src\\components\\SocialLinks\\index.tsx":"16","C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\index.tsx":"17","C:\\Side projects\\pxplots\\src\\components\\Grid\\GridBoxes\\index.tsx":"18","C:\\Side projects\\pxplots\\src\\components\\ThemeToggle\\index.tsx":"19","C:\\Side projects\\pxplots\\src\\Redux\\slices\\mintSlice\\index.tsx":"20","C:\\Side projects\\pxplots\\src\\components\\MintModal\\index.tsx":"21","C:\\Side projects\\pxplots\\src\\components\\pxplotCube\\index.tsx":"22","C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\ExamplePageB\\index.tsx":"23","C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\ExamplePageA\\index.tsx":"24","C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\ExampleMarketPageC\\index.tsx":"25","C:\\Side projects\\pxplots\\src\\enums\\index.tsx":"26","C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\ExampleMarketPageD\\index.tsx":"27","C:\\Side projects\\pxplots\\src\\enums\\devices.ts":"28","C:\\Side projects\\pxplots\\src\\helpers\\devices.ts":"29","C:\\Side projects\\pxplots\\src\\components\\Header\\index.tsx":"30","C:\\Side projects\\pxplots\\src\\helpers\\throttle.ts":"31"},{"size":192,"mtime":1643048919064,"results":"32","hashOfConfig":"33"},{"size":325,"mtime":1644352404653,"results":"34","hashOfConfig":"33"},{"size":1805,"mtime":1647283977102,"results":"35","hashOfConfig":"33"},{"size":1222,"mtime":1647289310995,"results":"36","hashOfConfig":"33"},{"size":518,"mtime":1647182636499,"results":"37","hashOfConfig":"33"},{"size":2495,"mtime":1644352404734,"results":"38","hashOfConfig":"33"},{"size":318,"mtime":1644352404835,"results":"39","hashOfConfig":"33"},{"size":6527,"mtime":1647204649326,"results":"40","hashOfConfig":"33"},{"size":260,"mtime":1644354077994,"results":"41","hashOfConfig":"33"},{"size":510,"mtime":1644355282825,"results":"42","hashOfConfig":"33"},{"size":61,"mtime":1644352404831,"results":"43","hashOfConfig":"33"},{"size":4316,"mtime":1647190428178,"results":"44","hashOfConfig":"33"},{"size":3569,"mtime":1647184899471,"results":"45","hashOfConfig":"33"},{"size":2736,"mtime":1647209041464,"results":"46","hashOfConfig":"33"},{"size":2441,"mtime":1644352404768,"results":"47","hashOfConfig":"33"},{"size":1571,"mtime":1646944971886,"results":"48","hashOfConfig":"33"},{"size":7518,"mtime":1647294325648,"results":"49","hashOfConfig":"33"},{"size":850,"mtime":1647183116975,"results":"50","hashOfConfig":"33"},{"size":3002,"mtime":1646938235294,"results":"51","hashOfConfig":"33"},{"size":478,"mtime":1644355137612,"results":"52","hashOfConfig":"33"},{"size":3716,"mtime":1647292313258,"results":"53","hashOfConfig":"33"},{"size":1333,"mtime":1647182365022,"results":"54","hashOfConfig":"33"},{"size":11450,"mtime":1647374642026,"results":"55","hashOfConfig":"33"},{"size":8510,"mtime":1647370219851,"results":"56","hashOfConfig":"33"},{"size":9879,"mtime":1647375555589,"results":"57","hashOfConfig":"33"},{"size":163,"mtime":1645899787014,"results":"58","hashOfConfig":"33"},{"size":2754,"mtime":1647194997892,"results":"59","hashOfConfig":"33"},{"size":94,"mtime":1646423281355,"results":"60","hashOfConfig":"33"},{"size":462,"mtime":1646939243274,"results":"61","hashOfConfig":"33"},{"size":4926,"mtime":1647290518068,"results":"62","hashOfConfig":"33"},{"size":333,"mtime":1646937652773,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"danulq",{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Side projects\\pxplots\\src\\index.js",[],["134","135"],"C:\\Side projects\\pxplots\\src\\App.js",[],"C:\\Side projects\\pxplots\\src\\components\\Wrapper\\index.tsx",["136","137","138","139","140","141"],"import * as React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport GridContainer from '../Grid/GridContainer/';\nimport Navigation from '../Navigation/';\nimport { getItemFromLocalStorage } from '../../helpers/storage';\nimport { useDispatch } from 'react-redux';\nimport { setTheme } from '../../Redux/slices/themeSlice';\nimport { deviceTypeIs } from '../../helpers/devices';\nimport { DeviceType } from '../../enums/devices';\nimport throttle from '../../helpers/throttle';\n\nconst useStyles = createUseStyles({\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tflexFlow: 'column'\n\t}\n});\n\nconst Wrapper = () => {\n\tconst [modalOpen, setModalOpen] = React.useState<boolean>(false);\n\tconst [ignored, force] = React.useReducer(x => x + 1, 0);\n\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\tReact.useEffect(() => {\n\t\tconst storedTheme = getItemFromLocalStorage('theme');\n\n\t\tif (storedTheme) {\n\t\t\tdispatch(setTheme(storedTheme));\n\t\t}\n\n\t\twindow.addEventListener('resize', onResize);\n\n\t\treturn window.removeEventListener('resize', onResize);\n\t}, [])\n\n\tReact.useEffect(() => {\n\t\twindow.addEventListener('resize', onResize);\n\t\treturn () => window.removeEventListener('resize', onResize);\n\t}, [])\n\n\tconst onResize = () => {\n\t\tconsole.log('resize')\n\t\tthrottle(forceUpdate, 500)\n\t}\n\n\tconst forceUpdate = () => force();\n\n\tconst openModal = () => setModalOpen(true);\n\n\tconst closeModal = () => setModalOpen(false);\n\tconst isDesktop = deviceTypeIs(DeviceType.Desktop);\n\n\treturn (\n\t\t<div className={classes.container}>\n\t\t\t{/* <Modal open={modalOpen} closeModal={closeModal} /> */}\n\t\t\t<div style={{ height: '100vh', width: '100vw', display: 'flex' }}>\n\t\t\t\t{isDesktop ? <Navigation /> : null}\n\t\t\t\t<GridContainer />\n\t\t\t</div>\n\t\t\t{/* <Menu openModal={openModal} /> */}\n\t\t</div>\n\t);\n};\n\nexport default Wrapper;\n",["142","143"],"C:\\Side projects\\pxplots\\src\\components\\Grid\\GridContainer\\index.tsx",["144"],"import * as React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useSelector } from 'react-redux';\nimport { DeviceType } from '../../../enums/devices';\nimport { deviceTypeIs } from '../../../helpers/devices';\nimport { IModalState } from '../../../Redux/slices/mintSlice';\nimport ExampleMarketPages from '../../ExampleMarketPages/';\nimport MintModal from '../../MintModal';\nimport GridBoxes from '../GridBoxes/';\n\nconst useStyles = createUseStyles({\n\tcontainer: {\n\t\toverflow: 'hidden',\n\t\theight: '100vh',\n\t\twidth: '100%',\n\t\tlineHeight: 0,\n\t\tposition: 'relative'\n\t}\n});\n\nconst GridContainer = () => {\n\tconst classes = useStyles();\n\tconst divEl = React.useRef<HTMLDivElement>(null);\n\tconst { modalOpen } = useSelector((state: any): any => state.modal)\n\t// const { theme = {} } = useSelector((state: IThemeState): IThemeState => state.theme)\n\tconst isDesktop = deviceTypeIs(DeviceType.Desktop);\n\n\tconsole.log('modal >', modalOpen)\n\t// \n\treturn (\n\t\t<div className={classes.container} ref={divEl}>\n\t\t\t{modalOpen\n\t\t\t\t? isDesktop ? <MintModal /> : <ExampleMarketPages modalOpen={modalOpen} />\n\t\t\t\t: <ExampleMarketPages modalOpen={modalOpen} />}\n\t\t\t<GridBoxes />\n\t\t</div>\n\t);\n};\n\nexport default GridContainer;\n","C:\\Side projects\\pxplots\\src\\components\\Grid\\GridBox\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\Menu\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\helpers\\storage.ts",[],"C:\\Side projects\\pxplots\\src\\components\\Navigation\\index.tsx",["145","146","147","148"],"import * as React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport About from './About/';\nimport Roadmap from './Roadmap/';\nimport Team from './Team/';\nimport FAQ from './FAQ/';\nimport SocialLinks from '../SocialLinks/';\nimport { IThemeState, setTheme } from '../../Redux/slices/themeSlice';\nimport { useSelector, useDispatch } from 'react-redux'\nimport ThemeToggle from '../ThemeToggle';\nimport { Theme } from '../../enums/themes';\nimport { setModalOpen } from '../../Redux/slices/mintSlice';\nimport Header from '../Header';\nimport { deviceTypeIs } from '../../helpers/devices';\nimport { DeviceType } from '../../enums/devices';\n\nconst useStyles = createUseStyles({\n\troot: {\n\t\tbackgroundColor: 'white',\n\t\tborderRight: 'solid 5px #5141f1',\n\t\tborderTopRightRadius: '8px',\n\t\tborderBottomRightRadius: '8px',\n\t\tboxShadow: 'rgb(0 0 0) 8px 12px 34px 0px',\n\t\tboxSizing: 'border-box',\n\t\tdisplay: 'flex',\n\t\tflexFlow: 'column',\n\t\tfontFamily: 'Roboto Slab, serif',\n\t\theight: '100%',\n\t\tpadding: '16px',\n\t\ttransition: 'background-color .4s linear',\n\t\twidth: '550px',\n\t\tzIndex: 1,\n\n\t\t'@media screen and (max-width: 1200px)': {\n\t\t\tborder: 'solid 5px #5141f1',\n\t\t\tborderRadius: '8px',\n\t\t\theight: '72%',\n\t\t\tlineHeight: 'normal',\n\t\t\twidth: '80%',\n\t\t\tleft: '50%',\n\t\t\tposition: 'absolute',\n\t\t\ttop: '50%',\n\t\t\ttransform: 'translate(-50%, -50%)'\n\t\t},\n\n\t\t'@media screen and (max-width: 600px)': {\n\t\t\theight: '68%',\n\t\t\ttop: '48%',\n\t\t\twidth: '88%'\n\t\t},\n\t\t'@media screen and (max-width: 380px)': {\n\t\t\theight: '62.5%'\n\t\t}\n\t},\n\troot_night_mode: {\n\t\tbackgroundColor: 'black',\n\t\tcolor: 'white',\n\t\ttransition: 'background-color .4s linear',\n\n\t},\n\ttext: {\n\t\tcolor: 'black',\n\t\ttextAlign: 'center',\n\t\ttransition: 'background-color .4s linear',\n\t},\n\tunconnected_text: {\n\t\topacity: 0,\n\t},\n\tconnected_text_container: {\n\t\theight: '16px',\n\t},\n\tconnected_text: {\n\t\tfontSize: '12px',\n\t\topacity: 1,\n\t\ttransition: 'opacity .2s ease-in-out'\n\n\t},\n\tnav_title: {\n\t\tmargin: '0',\n\t\tfontSize: '28px',\n\n\t\t'@media screen and (max-width: 600px)': {\n\t\t\tfontSize: '24px'\n\t\t}\n\t},\n\tnav_caption: {\n\t\tmargin: '8px 0 26px 0',\n\t\tfontSize: '18px',\n\n\t\t'@media screen and (max-width: 600px)': {\n\t\t\tfontSize: '14px',\n\t\t\tmarginBottom: '18px'\n\t\t}\n\t},\n\tnight_mode_text: {\n\t\tcolor: 'white',\n\t\ttransition: 'background-color .4s linear',\n\t},\n\theading_button: {\n\t\tbackgroundColor: 'transparent',\n\t\tborder: 'none',\n\t\tcolor: 'grey',\n\t\tcursor: 'pointer',\n\t\tfontSize: '20px',\n\t\tfontFamily: 'Roboto Slab, serif',\n\t\tborderBottom: 'solid 3px transparent',\n\n\t\t'&:hover': {\n\t\t\tborderBottom: 'solid 3px #5141f1'\n\t\t},\n\n\t\t'@media screen and (max-width: 380px)': {\n\t\t\tfontSize: '18px'\n\t\t}\n\t},\n\theading_button_active: {\n\t\tcolor: '#5141f1',\n\t\topacity: 1,\n\t\t'&:hover': {\n\t\t\tborderBottom: 'solid 3px transparent'\n\t\t}\n\t},\n\tsection_container: {\n\t\tflex: 1,\n\t\theight: '50%',\n\t\toverflowY: 'auto',\n\t\t'&::-webkit-scrollbar': {\n\t\t\twidth: '0.4em',\n\t\t\theight: '10px !important'\n\t\t},\n\t\t'&::-webkit-scrollbar-track': {\n\t\t\tpadding: '0 16px'\n\t\t},\n\t\t'&::-webkit-scrollbar-thumb': {\n\t\t\tbackgroundColor: '#5141f1',\n\t\t\tborderRadius: '8px',\n\t\t\tborder: 'solid 2px black',\n\t\t\tmarginLeft: '10px',\n\t\t\ttransition: 'border .4s linear',\n\t\t},\n\t\t'@media screen and (max-width: 1200px)': {\n\t\t\theight: '60%',\n\t\t\toverflowY: 'auto',\n\t\t},\n\n\t\t'@media screen and (max-width: 600px)': {\n\t\t\theight: '50%',\n\t\t\toverflowY: 'auto',\n\t\t},\n\n\t},\n\tsection: {\n\t\t// height: '55vh',\n\t\t// overflow: 'auto',\n\t\ttextAlign: 'center',\n\t\tpadding: '0 16px',\n\t\tboxSizing: 'border-box',\n\n\t\t'@media screen and (max-width: 1200px)': {\n\t\t\tdisplay: 'flex',\n\t\t\tflexFlow: 'column',\n\t\t\t// height: '62.5vh',\n\t\t\tjustifyContent: 'center',\n\t\t}\n\t},\n\tsection_night_mode: {\n\t\t'&::-webkit-scrollbar-thumb': {\n\t\t\tbackgroundColor: '#5141f1',\n\t\t\tborderRadius: '8px',\n\t\t\tborder: 'solid 2px white',\n\t\t\tmarginLeft: '10px',\n\t\t\ttransition: 'border .4s linear',\n\t\t}\n\t},\n\tdotted_line: {\n\t\tborderBottom: 'dotted 5px black',\n\t\twidth: '80%',\n\t\tmargin: '0 auto 18px auto',\n\t\ttransition: 'border-bottom .4s linear',\n\n\t},\n\tdotted_line_night_mode: {\n\t\tborderBottom: 'dotted 5px white',\n\t\ttransition: 'border-bottom .4s linear',\n\t},\n});\n\nenum Sections {\n\tAbout = 0,\n\tRoadmap = 1,\n\tTeam = 2,\n\tFaq = 3,\n\tDontClick = 4\n}\n\nconst Navigation = () => {\n\tconst classes = useStyles();\n\n\tconst [section, setSection] = React.useState<number>(0);\n\tconst sectionRef = React.useRef<HTMLDivElement>(null);\n\tconst { theme = {} } = useSelector((state: IThemeState): IThemeState => state.theme)\n\tconst headings = ['About', 'RoadMap', 'Team', 'FAQ'];\n\tconst lightMode = theme === Theme.Light;\n\tconst isDesktop = deviceTypeIs(DeviceType.Desktop);\n\n\tReact.useEffect(() => {\n\t\tif (sectionRef.current) {\n\t\t\tconsole.log('ref', sectionRef.current.scrollTop)\n\t\t\tsectionRef.current.scrollTop = 0;\n\t\t}\n\t}, [section])\n\n\tconst renderSection = () => {\n\t\tswitch (section) {\n\t\t\tcase Sections.About:\n\t\t\t\treturn <About />;\n\t\t\tcase Sections.Roadmap:\n\t\t\t\treturn <Roadmap />;\n\t\t\tcase Sections.Team:\n\t\t\t\treturn <Team />;\n\t\t\tcase Sections.Faq:\n\t\t\t\treturn <FAQ />;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\tconst renderHeadings = () => {\n\t\treturn headings.map((heading, i) => {\n\t\t\tconst active = i === section;\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\tclassName={`${classes.heading_button} ${active ? classes.heading_button_active : ''}`}\n\t\t\t\t\tonClick={() => setSection(i)}\n\t\t\t\t>\n\t\t\t\t\t{heading}\n\t\t\t\t</button>\n\t\t\t)\n\t\t})\n\t}\n\n\n\tconst welcome = () => {\n\t\tconst isMobile = deviceTypeIs(DeviceType.Mobile);\n\t\tif (isMobile) {\n\t\t\treturn 'Welcome To pxplots! 🏝️'\n\t\t} else {\n\t\t\treturn '🏝️ Welcome To pxplots! 🏝️'\n\t\t}\n\t}\n\treturn (\n\t\t<div className={`${classes.root} ${lightMode ? '' : classes.root_night_mode}`}>\n\t\t\t{isDesktop ? <Header /> : null}\n\t\t\t<div>\n\t\t\t\t<p className={`${classes.text} ${classes.nav_title} ${lightMode ? '' : classes.night_mode_text}`}>\n\t\t\t\t\t{welcome()}\n\t\t\t\t</p>\n\t\t\t\t<p className={`${classes.text} ${classes.nav_caption} ${lightMode ? '' : classes.night_mode_text}`}>\n\t\t\t\t\t10,000 sm0l plots, living on the Ethereum blockchain 🧱⛓️\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className={`${classes.dotted_line} ${lightMode ? '' : classes.dotted_line_night_mode}`} />\n\t\t\t<div style={{ display: 'flex', justifyContent: 'center', marginBottom: '16px' }}>\n\t\t\t\t{renderHeadings()}\n\t\t\t</div>\n\t\t\t<div className={classes.section_container} ref={sectionRef}>\n\t\t\t\t<div className={`${classes.section} ${lightMode ? '' : classes.section_night_mode}`}>\n\t\t\t\t\t{renderSection()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{\n\t\t\t\tisDesktop\n\t\t\t\t\t? <div style={{ height: '60px' }} >\n\t\t\t\t\t\t<SocialLinks />\n\t\t\t\t\t</div>\n\t\t\t\t\t: null\n\t\t\t}\n\t\t</div >\n\t);\n};\n\nexport default Navigation;\n","C:\\Side projects\\pxplots\\src\\Redux\\store\\index.ts",[],"C:\\Side projects\\pxplots\\src\\Redux\\slices\\themeSlice\\index.ts",[],"C:\\Side projects\\pxplots\\src\\enums\\themes.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\Navigation\\Roadmap\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\Navigation\\About\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\Navigation\\Team\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\Navigation\\FAQ\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\SocialLinks\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\Grid\\GridBoxes\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\ThemeToggle\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\Redux\\slices\\mintSlice\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\MintModal\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\pxplotCube\\index.tsx",["149"],"import * as React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { useSelector } from 'react-redux';\r\nimport { Theme } from '../../enums/themes';\r\nimport { IThemeState } from '../../Redux/slices/themeSlice';\r\n\r\nconst useStyles = createUseStyles({\r\n\tcube: {\r\n\t\tborderRadius: '4px',\r\n\t\theight: '38px',\r\n\t\twidth: '38px',\r\n\t\ttransition: 'background-color .25s ease-in-out'\r\n\t},\r\n\tcube_container: {\r\n\t\talignItems: 'center',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center'\r\n\t}\r\n\r\n});\r\n\r\nconst getBgColour = () => {\r\n\tconst randomColour = Math.floor(Math.random() * 16777215).toString(16);\r\n\treturn `#${randomColour}`;\r\n};\r\n\r\n\r\nconst PxplotCube = () => {\r\n\tconst [bgColour, setBgColour] = React.useState<string>('');\r\n\tconst classes = useStyles();\r\n\tconst { theme } = useSelector((state: IThemeState) => state.theme);\r\n\tconst lightMode = theme === Theme.Light;\r\n\r\n\tReact.useEffect(() => {\r\n\t\tinterval();\r\n\t}, [])\r\n\r\n\tconst interval = () => {\r\n\t\tsetInterval(() => {\r\n\t\t\tconst newBgColour = getBgColour();\r\n\t\t\tsetBgColour(newBgColour)\r\n\t\t}, 1000)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.cube_container}>\r\n\t\t\t<div\r\n\t\t\t\tclassName={classes.cube}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackgroundColor: bgColour,\r\n\t\t\t\t\t// border: `solid 3px ${lightMode ? 'black' : 'white'}`\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PxplotCube;\r\n","C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\ExamplePageB\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\ExamplePageA\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\ExampleMarketPageC\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\enums\\index.tsx",[],"C:\\Side projects\\pxplots\\src\\components\\ExampleMarketPages\\ExampleMarketPageD\\index.tsx",["150","151","152","153"],"import * as React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { useSelector } from 'react-redux';\r\nimport { XAxis } from '../../../enums';\r\nimport { Theme } from '../../../enums/themes';\r\nimport { IThemeState } from '../../../Redux/slices/themeSlice';\r\n\r\nconst useStyles = createUseStyles({\r\n\r\n\tcontainer: {\r\n\t\tboxSizing: 'border-box',\r\n\t\tfontFamily: 'Roboto Slab, serif',\r\n\t\theight: '100%',\r\n\t\twidth: '100%',\r\n\t\topacity: 0.25,\r\n\t\tbackgroundColor: 'black',\r\n\t\ttransition: 'opacity .2s ease-in-out',\r\n\t\tdisplay: 'flex',\r\n\t\tflexFlow: 'column',\r\n\t\t'&:hover': {\r\n\t\t\ttransition: 'opacity .2s ease-in-out',\r\n\t\t\topacity: 1\r\n\t\t},\r\n\r\n\t\t'@media screen and (max-width: 1024px)': {\r\n\t\t\tborder: 'solid 5px #5141f1',\r\n\t\t\tborderRadius: '8px',\r\n\t\t\topacity: 1,\r\n\t\t\toverflowY: 'auto',\r\n\t\t\twidth: '80vw',\r\n\t\t\theight: '72%',\r\n\t\t\tleft: '50%',\r\n\t\t\tposition: 'absolute',\r\n\t\t\ttop: '50%',\r\n\t\t\ttransform: 'translate(-50%, -50%)'\r\n\t\t},\r\n\r\n\t\t'@media screen and (max-width: 600px)': {\r\n\t\t\theight: '68%',\r\n\t\t\ttop: '48%',\r\n\t\t\twidth: '88%'\r\n\t\t},\r\n\r\n\t\t'@media screen and (max-width: 380px)': {\r\n\t\t\theight: '62.5%'\r\n\t\t}\r\n\t},\r\n\tsection: {\r\n\t\t// height: '100%'\r\n\t}\r\n})\r\n\r\ninterface IHoveredRect {\r\n\tindex: number,\r\n\txAxis: xAxis\r\n}\r\n\r\ntype xAxis = XAxis.Left | XAxis.Right;\r\nconst ExampleMarketPageC = () => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.container} style={{ scrollSnapType: 'y mandatory' }}>\r\n\t\t\t<div style={{\r\n\t\t\t\theight: '100%',\r\n\t\t\t\twidth: '100%',\r\n\t\t\t\tminHeight: '100%',\r\n\t\t\t\tscrollSnapAlign: 'start',\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\tbackgroundColor: '#dfbf49',\r\n\t\t\t\talignItems: 'center'\r\n\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<p style={{ textAlign: 'center' }}>\r\n\t\t\t\t\tOr, just have full page images\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<div style={{\r\n\t\t\t\theight: '100%',\r\n\t\t\t\twidth: '100%',\r\n\t\t\t\tminHeight: '100%',\r\n\t\t\t\tscrollSnapAlign: 'start',\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\tbackgroundColor: '#49dfdf',\r\n\t\t\t\talignItems: 'center'\r\n\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<p style={{ textAlign: 'center' }}>\r\n\t\t\t\t\tHope you've enjoyed these examples\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<div style={{\r\n\t\t\t\theight: '100%',\r\n\t\t\t\twidth: '100%',\r\n\t\t\t\tminHeight: '100%',\r\n\t\t\t\tscrollSnapAlign: 'start',\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\tbackgroundColor: '#49df93',\r\n\t\t\t\talignItems: 'center'\r\n\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<p style={{ textAlign: 'center' }}>\r\n\t\t\t\t\tAny questions, drop a us Tweet!\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<div style={{\r\n\t\t\t\theight: '100%',\r\n\t\t\t\twidth: '100%',\r\n\t\t\t\tminHeight: '100%',\r\n\t\t\t\tscrollSnapAlign: 'start',\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\tbackgroundColor: '#df5e49',\r\n\t\t\t\talignItems: 'center'\r\n\t\t\t}}\r\n\t\t\t>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ExampleMarketPageC;\r\n\r\n","C:\\Side projects\\pxplots\\src\\enums\\devices.ts",[],"C:\\Side projects\\pxplots\\src\\helpers\\devices.ts",[],"C:\\Side projects\\pxplots\\src\\components\\Header\\index.tsx",["154","155","156","157"],"import * as React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { IThemeState, setTheme } from '../../Redux/slices/themeSlice';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport ThemeToggle from '../ThemeToggle';\r\nimport { Theme } from '../../enums/themes';\r\nimport { setModalOpen } from '../../Redux/slices/mintSlice';\r\n\r\nconst useStyles = createUseStyles({\r\n\troot: {\r\n\t\tbackgroundColor: 'white',\r\n\t\tboxSizing: 'border-box',\r\n\t\tfontFamily: 'Roboto Slab, serif',\r\n\t\tpadding: '18px 16px 8px',\r\n\t\ttop: 0,\r\n\t\ttransition: 'background-color .4s linear',\r\n\t\tzIndex: 1,\r\n\r\n\t\t'@media screen and (max-width: 1024px)': {\r\n\t\t\tboxShadow: 'rgb(0 0 0) 8px 12px 34px 0px',\r\n\t\t\tlineHeight: 'normal',\r\n\t\t\tposition: 'absolute',\r\n\t\t\twidth: '100%',\r\n\r\n\t\t}\r\n\t},\r\n\troot_night_mode: {\r\n\t\tbackgroundColor: 'black',\r\n\t\tcolor: 'white',\r\n\t\ttransition: 'background-color .4s linear'\r\n\t},\r\n\tbutton_container: {\r\n\t\talignItems: 'center',\r\n\t\tdisplay: 'flex',\r\n\t\tflexFlow: 'row',\r\n\t\theight: 'fit-content',\r\n\t\t// marginBottom: '16px',\r\n\t\tjustifyContent: 'space-between',\r\n\r\n\t\t'@media screen and (max-width: 1024px)': {\r\n\t\t\t// marginBottom: '30px'\r\n\t\t},\r\n\t\t'@media screen and (max-width: 600px)': {\r\n\t\t\tmarginBottom: '0px'\r\n\t\t}\r\n\t},\r\n\tbutton: {\r\n\t\tbackgroundColor: '#5141f1',\r\n\t\tborder: 'solid 4px black',\r\n\t\tborderRadius: '5px',\r\n\t\tcolor: 'white',\r\n\t\tcursor: 'pointer',\r\n\t\tfontFamily: 'Roboto Slab, serif',\r\n\t\tfontSize: '18px',\r\n\t\tminHeight: '48px',\r\n\t\toutline: 'solid 4px white',\r\n\t\ttransition: 'border .4s linear, outline .4s linear, background-color .2s linear',\r\n\t\twidth: '180px',\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: '#3effdb',\r\n\t\t\tcolor: 'black',\r\n\t\t\ttransition: 'background-color .2s linear',\r\n\t\t},\r\n\t\t'&:active': {\r\n\t\t\tbackgroundColor: '#fffd00',\r\n\t\t\tboxShadow: 'inset 0 0 16px #000000',\r\n\t\t\ttransition: 'background-color .2s linear, box-shadow .05s linear',\r\n\t\t}\r\n\t},\r\n\tmint_button: {\r\n\t\tborder: 'solid 4px black',\r\n\t\tbackgroundColor: '#3effdb',\r\n\t\tcolor: 'black',\r\n\t\t'&:hover': {\r\n\t\t\tcolor: 'white',\r\n\t\t\tbackgroundColor: '#d362d2',\r\n\t\t}\r\n\t},\r\n\tbutton_night_mode: {\r\n\t\tborder: 'solid 4px white',\r\n\t\toutline: 'solid 4px black',\r\n\t\ttransition: 'border .4s linear, outline .4s linear',\r\n\t},\r\n\tunconnected_text: {\r\n\t\topacity: 0,\r\n\t},\r\n\tconnected_text_container: {\r\n\t\theight: '16px',\r\n\t},\r\n\tconnected_text: {\r\n\t\tfontSize: '12px',\r\n\t\topacity: 1,\r\n\t\ttransition: 'opacity .2s ease-in-out'\r\n\r\n\t},\r\n\r\n});\r\n\r\nenum Sections {\r\n\tAbout = 0,\r\n\tRoadmap = 1,\r\n\tTeam = 2,\r\n\tFaq = 3,\r\n\tDontClick = 4\r\n}\r\n\r\n\r\n\r\nconst Header = () => {\r\n\tconst classes = useStyles();\r\n\tconst [walletConnected, setWalletConnected] = React.useState<boolean>(false);\r\n\tconst [userWalletAddress, setUserWalletAddress] = React.useState<string>('');\r\n\r\n\tconst [section, setSection] = React.useState<number>(0);\r\n\tconst sectionRef = React.useRef<HTMLDivElement>(null);\r\n\tconst dispatch = useDispatch();\r\n\tconst { theme = {} } = useSelector((state: IThemeState): IThemeState => state.theme)\r\n\tconst { modalOpen } = useSelector((state: any): any => state.modal)\r\n\r\n\tconst headings = ['About', 'RoadMap', 'Team', 'FAQ'];\r\n\tconst lightMode = theme === Theme.Light;\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (sectionRef.current) {\r\n\t\t\tsectionRef.current.scrollTop = 0;\r\n\t\t}\r\n\t}, [section])\r\n\r\n\tconst connectWallet = () => {\r\n\t\tconsole.log('connectin')\r\n\t\tif ((window as any).ethereum) {\r\n\t\t\t(window as any).ethereum\r\n\t\t\t\t.request({ method: 'eth_requestAccounts' })\r\n\t\t\t\t.then((accounts: Array<string>) => {\r\n\t\t\t\t\tconst [account] = accounts;\r\n\t\t\t\t\t(window as any).userWalletAddress = account;\r\n\t\t\t\t\tsetWalletConnected(true);\r\n\t\t\t\t\tsetUserWalletAddress(account);\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\talert('No Web3 Wallet Extension Detected');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={`${classes.root} ${lightMode ? '' : classes.root_night_mode}`}>\r\n\t\t\t<div className={classes.button_container}>\r\n\t\t\t\t<ThemeToggle />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={`\r\n                        ${classes.button}\r\n                        ${walletConnected ? classes.mint_button : ''}\r\n                        ${lightMode ? '' : classes.button_night_mode}\r\n                    `}\r\n\t\t\t\t\t\tonClick={() => walletConnected ? dispatch(setModalOpen(modalOpen ? false : true)) : connectWallet()}>\r\n\t\t\t\t\t\t{walletConnected\r\n\t\t\t\t\t\t\t? modalOpen\r\n\t\t\t\t\t\t\t\t? 'Go Back'\r\n\t\t\t\t\t\t\t\t: 'Go To Mint'\r\n\t\t\t\t\t\t\t: 'Connect Wallet'}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<div className={classes.connected_text_container}>\r\n\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\tclassName={`\r\n                                ${classes.connected_text_container}\r\n                                ${userWalletAddress ? classes.connected_text : classes.unconnected_text}\r\n                            `}\r\n\t\t\t\t\t\t\tstyle={{ margin: 0, textAlign: 'center' }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{userWalletAddress ?\r\n\t\t\t\t\t\t\t\t`Connected as ...${userWalletAddress.split('').splice(0, 10).join('')}`\r\n\t\t\t\t\t\t\t\t: ''}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","C:\\Side projects\\pxplots\\src\\helpers\\throttle.ts",[],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":20,"column":9,"nodeType":"164","messageId":"165","endLine":20,"endColumn":18},{"ruleId":"162","severity":1,"message":"166","line":21,"column":9,"nodeType":"164","messageId":"165","endLine":21,"endColumn":16},{"ruleId":"167","severity":1,"message":"168","line":36,"column":5,"nodeType":"169","endLine":36,"endColumn":7,"suggestions":"170"},{"ruleId":"167","severity":1,"message":"171","line":41,"column":5,"nodeType":"169","endLine":41,"endColumn":7,"suggestions":"172"},{"ruleId":"162","severity":1,"message":"173","line":50,"column":8,"nodeType":"164","messageId":"165","endLine":50,"endColumn":17},{"ruleId":"162","severity":1,"message":"174","line":52,"column":8,"nodeType":"164","messageId":"165","endLine":52,"endColumn":18},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"175","line":6,"column":10,"nodeType":"164","messageId":"165","endLine":6,"endColumn":21},{"ruleId":"162","severity":1,"message":"176","line":8,"column":23,"nodeType":"164","messageId":"165","endLine":8,"endColumn":31},{"ruleId":"162","severity":1,"message":"177","line":9,"column":23,"nodeType":"164","messageId":"165","endLine":9,"endColumn":34},{"ruleId":"162","severity":1,"message":"178","line":10,"column":8,"nodeType":"164","messageId":"165","endLine":10,"endColumn":19},{"ruleId":"162","severity":1,"message":"179","line":12,"column":10,"nodeType":"164","messageId":"165","endLine":12,"endColumn":22},{"ruleId":"162","severity":1,"message":"180","line":32,"column":8,"nodeType":"164","messageId":"165","endLine":32,"endColumn":17},{"ruleId":"162","severity":1,"message":"181","line":3,"column":10,"nodeType":"164","messageId":"165","endLine":3,"endColumn":21},{"ruleId":"162","severity":1,"message":"182","line":5,"column":10,"nodeType":"164","messageId":"165","endLine":5,"endColumn":15},{"ruleId":"162","severity":1,"message":"183","line":6,"column":10,"nodeType":"164","messageId":"165","endLine":6,"endColumn":21},{"ruleId":"162","severity":1,"message":"184","line":53,"column":11,"nodeType":"164","messageId":"165","endLine":53,"endColumn":23},{"ruleId":"162","severity":1,"message":"176","line":3,"column":23,"nodeType":"164","messageId":"165","endLine":3,"endColumn":31},{"ruleId":"162","severity":1,"message":"185","line":99,"column":6,"nodeType":"164","messageId":"165","endLine":99,"endColumn":14},{"ruleId":"162","severity":1,"message":"186","line":114,"column":18,"nodeType":"164","messageId":"165","endLine":114,"endColumn":28},{"ruleId":"162","severity":1,"message":"187","line":120,"column":8,"nodeType":"164","messageId":"165","endLine":120,"endColumn":16},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"@typescript-eslint/no-unused-vars","'modalOpen' is assigned a value but never used.","Identifier","unusedVar","'ignored' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch' and 'onResize'. Either include them or remove the dependency array.","ArrayExpression",["190"],"React Hook React.useEffect has a missing dependency: 'onResize'. Either include it or remove the dependency array.",["191"],"'openModal' is assigned a value but never used.","'closeModal' is assigned a value but never used.","'IModalState' is defined but never used.","'setTheme' is defined but never used.","'useDispatch' is defined but never used.","'ThemeToggle' is defined but never used.","'setModalOpen' is defined but never used.","'lightMode' is assigned a value but never used.","'useSelector' is defined but never used.","'Theme' is defined but never used.","'IThemeState' is defined but never used.","'IHoveredRect' is defined but never used.","'Sections' is defined but never used.","'setSection' is assigned a value but never used.","'headings' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},"Update the dependencies array to be: [dispatch, onResize]",{"range":"196","text":"197"},"Update the dependencies array to be: [onResize]",{"range":"198","text":"199"},[1054,1056],"[dispatch, onResize]",[1198,1200],"[onResize]"]